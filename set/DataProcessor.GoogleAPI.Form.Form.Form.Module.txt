//Forming the URL for an authentication request
Функция ПолучитьУРЛдляЗапросаАутентификации()
	УРЛ = "https://accounts.google.com/o/oauth2/v2/auth?";
	ТипОтвета = "response_type=code";
	КлиентИД = "client_id=" + ПолучитьИДКлиента();
	РедиректУРИ = "redirect_uri=urn:ietf:wg:oauth:2.0:oob:auto";
	ОбластьВидимости = "scope=profile https://spreadsheets.google.com/feeds";
	СтатусСообщение = "state=_";
	//ПодсказкаЛогин = "login_hint"
	Возврат УРЛ + 
	ТипОтвета + "&" +
	КлиентИД + "&" +
	РедиректУРИ + "&" +
	ОбластьВидимости + "&" +
	СтатусСообщение;
	
КонецФункции

Функция ПолучитьИДКлиента()
	Возврат Объект.client_id_google;
КонецФункции

Функция ПолучитьСекретКлиента()
	Возврат Объект.client_secret_google;
КонецФункции

Функция РазобратьОтветЗапросаАутентификации(Ответ)
	Перем СоответствиеЗначений, Пара;
	МассивОтвета = РазложитьСтрокуВМассивПодстрок(Ответ, " ");
	МассивЗначений = РазложитьСтрокуВМассивПодстрок(МассивОтвета[1], "&");
	СоответствиеЗначений = Новый Соответствие;
	Для Индекс = 0 По МассивЗначений.Количество() - 1 Цикл
		Пара = РазложитьСтрокуВМассивПодстрок(МассивЗначений[Индекс], "=");
		СоответствиеЗначений.Вставить(Пара[0], Пара[1]);
	КонецЦикла;

 	ЗапросПОСТ(СоответствиеЗначений.Получить("code"));

КонецФункции

&НаСервере
Функция СоздХМЛ(first, second)
	ЗаписьXML = Новый ЗаписьXML();
	ЗаписьXML.УстановитьСтроку();
	ЗаписьXML.ЗаписатьНачалоЭлемента("entry");
	
	ЗаписьXML.ЗаписатьАтрибут("xmlns","http://www.w3.org/2005/Atom");
	ЗаписьXML.ЗаписатьСоответствиеПространстваИмен("gsx", "http://schemas.google.com/spreadsheets/2006/extended");
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("first", "http://schemas.google.com/spreadsheets/2006/extended");
	ЗаписьXML.ЗаписатьСоответствиеПространстваИмен("gsx", "http://schemas.google.com/spreadsheets/2006/extended");
	ЗаписьXML.ЗаписатьТекст(first);
	ЗаписьXML.ЗаписатьКонецЭлемента();

	ЗаписьXML.ЗаписатьНачалоЭлемента("second", "http://schemas.google.com/spreadsheets/2006/extended");
	ЗаписьXML.ЗаписатьСоответствиеПространстваИмен("gsx", "http://schemas.google.com/spreadsheets/2006/extended");
	ЗаписьXML.ЗаписатьТекст(second);
	ЗаписьXML.ЗаписатьКонецЭлемента(); 
	
	ЗаписьXML.ЗаписатьКонецЭлемента();
	
	Возврат ЗаписьXML.Закрыть();
КонецФункции


&НаКлиенте
Функция ПерейтиПоАдресуЗапросаАутентификации()
	Ссылка = ПолучитьУРЛдляЗапросаАутентификации();	
КонецФункции

&НаКлиенте
Функция ЗаписатьОтветЗапросаАутентификации()
	Перем Ответ;
	Ответ = Элементы.Ссылка.Документ.title;
	РазобратьОтветЗапросаАутентификации(Ответ);
	Сообщить("Разобрано. Записано.");
КонецФункции

// Функция "расщепляет" строку на подстроки, используя заданный 
//        разделитель. Разделитель может иметь любую длину. 
//        Если в качестве разделителя задан пробел, рядом стоящие пробелы 
//        считаются одним разделителем, а ведущие и хвостовые пробелы параметра Стр
//        игнорируются.
//        Например, 
//        РазложитьСтрокуВМассивПодстрок(",ку,,,му", ",") возвратит массив значений из пяти элементов, 
//        три из которых - пустые строки, а 
//        РазложитьСтрокуВМассивПодстрок(" ку   му", " ") возвратит массив значений из двух элементов
//
//    Параметры: 
//        Стр -            строка, которую необходимо разложить на подстроки. 
//                        Параметр передается по значению.
//        Разделитель -    строка-разделитель, по умолчанию - запятая.
//
//
//    Возвращаемое значение:
//        массив значений, элементы которого - подстроки
//
Функция РазложитьСтрокуВМассивПодстрок(Знач Стр, Разделитель = ",") Экспорт
   
   МассивСтрок = Новый Массив();
   Если Разделитель = " " Тогда
       Стр = СокрЛП(Стр);
       Пока 1=1 Цикл
           Поз = Найти(Стр,Разделитель);
           Если Поз=0 Тогда
               МассивСтрок.Добавить(Стр);
               Возврат МассивСтрок;
           КонецЕсли;
           МассивСтрок.Добавить(Лев(Стр,Поз-1));
           Стр = СокрЛ(Сред(Стр,Поз));
       КонецЦикла;
   Иначе
       ДлинаРазделителя = СтрДлина(Разделитель);
       Пока 1=1 Цикл
           Поз = Найти(Стр,Разделитель);
           Если Поз=0 Тогда
               МассивСтрок.Добавить(Стр);
               Возврат МассивСтрок;
           КонецЕсли;
           МассивСтрок.Добавить(Лев(Стр,Поз-1));
           Стр = Сред(Стр,Поз+ДлинаРазделителя);
       КонецЦикла;
   КонецЕсли;
   
КонецФункции // глРазложить


Процедура ЗапросПОСТ(code)

Хост = "www.googleapis.com";
АдресРесурса = "/oauth2/v4/token";
Заголовки = Новый Соответствие;
Заголовки.Вставить("Host", "www.googleapis.com");
Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded");
СтрокаТела = "code=" + code + 
"&client_id=" + ПолучитьИДКлиента() +
"&client_secret=" + ПолучитьСекретКлиента() +
"&redirect_uri=urn:ietf:wg:oauth:2.0:oob:auto" + 
"&grant_type=authorization_code";

ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL( неопределено, неопределено );


Попытка
    Соединение = Новый HTTPСоединение(Хост,,,,,,ЗащищенноеСоединение);
Исключение
    Сообщить("Не удалось установить соединение с сервером онлайн-проверки:" 
        + Символы.ПС + ИнформацияОбОшибке().Описание, СтатусСообщения.Важное);
    Возврат;
КонецПопытки;

// посылаем запрос
Попытка
    HTTPЗапрос = Новый HTTPЗапрос(АдресРесурса, Заголовки);
	HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаТела);
    Результат  = Соединение.ОтправитьДляОбработки(HTTPЗапрос);	 
	Соединение = Неопределено;
    Если Результат.КодСостояния > 299 Тогда
       Сообщить("Код состояния " + Результат.КодСостояния + ". Проверка не выполнена");
   КонецЕсли;
   Сообщить(Результат.КодСостояния);
   Сообщить(Результат.ПолучитьТелоКакСтроку());
   ЧтениеДЖЭЙСОН = Новый ЧтениеJSON();
   ЧтениеДЖЭЙСОН.УстановитьСтроку(Результат.ПолучитьТелоКакСтроку());
   Данные = ПрочитатьJSON(ЧтениеДЖЭЙСОН);
   ЧтениеДЖЭЙСОН.Закрыть();
   
  
  Объект.access_token_google = Данные.access_token;  
  Объект.refresh_token_google = Данные.refresh_token; 
  Объект.expires_in_google = Данные.expires_in; 
  Объект.token_type_google = Данные.token_type;
   
Исключение
    Сообщить(ИнформацияОбОшибке().Описание + ИнформацияОбОшибке().Причина, СтатусСообщения.Важное);
КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура СообщитьМоиДанные()
	ПолучитьМоиДанные();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЗаписьВТаблицу()
	ДобавитьСтроку(first, second);
	first = "";
	second = "";
КонецПроцедуры

&НаСервере
Процедура ПолучитьМоиДанные()
	ГА = РеквизитФормыВЗначение("Объект");
	Хост = "www.googleapis.com";
	АдресРесурса = "/plus/v1/people/me";
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Authorization", Объект.token_type_google + " " + Объект.access_token_google); 
	Результат = ГА.ХТТПГЕТ(Хост, АдресРесурса, Заголовки);
	Сообщить("КодСостояния: " + Результат.КодСостояния);
	ЧтениеДЖЭЙСОН = Новый ЧтениеJSON();
   	ЧтениеДЖЭЙСОН.УстановитьСтроку(Результат.ПолучитьТелоКакСтроку());
   	Данные = ПрочитатьJSON(ЧтениеДЖЭЙСОН);
   	ЧтениеДЖЭЙСОН.Закрыть();
	Сообщить("displayName: " + Данные.displayName + "; nickname: " + Данные.nickname);
	ЗначениеВРеквизитФормы(ГА, "Объект");
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтроку(first, second)
	ГА = РеквизитФормыВЗначение("Объект");
	Хост = "spreadsheets.google.com";
	АдресРесурса = "/feeds/list/1r5Jz-6eBMoPBF8NOby6i3QsJxGW9YIGvdsazQa8iF8s/1/private/full";
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Authorization", Объект.token_type_google + " " + Объект.access_token_google);
	Заголовки.Вставить("Content-Type", "application/atom+xml;type=feed");
	ТелоКакСтрока = СоздХМЛ(first, second);
	Результат = ГА.ХТТППОСТ(Хост, АдресРесурса, Заголовки, ТелоКакСтрока);
	Сообщить("КодСостояния: " + Результат.КодСостояния); 
	ЗначениеВРеквизитФормы(ГА, "Объект");
КонецПроцедуры

